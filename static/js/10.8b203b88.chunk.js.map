{"version":3,"sources":["pages/test/__test__/todo/TodoItem.js","pages/test/__test__/todo/TodoList.js","pages/test/__test__/todo/TodoForm.js","pages/test/__test__/todo/TodoApp.js"],"names":["React","memo","todo","onToggle","onRemove","id","text","done","toggle","useCallback","remove","style","textDecoration","onClick","TodoList","todos","data-testid","map","key","TodoForm","onInsert","useState","value","setValue","onChange","e","target","onSubmit","preventDefault","placeholder","type","TodoApp","setTodos","nextId","useRef","concat","current","filter"],"mappings":"yJAsCeA,MAAMC,MApCJ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1BC,EAAmBH,EAAnBG,GAAIC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KACZC,EAASC,uBAAY,kBAAMN,EAASE,KAAK,CAACA,EAAIF,IAC9CO,EAASD,uBAAY,kBAAML,EAASC,KAAK,CAACA,EAAID,IAgBpD,OACE,4BACE,0BACEO,MAAO,CACLC,eAAgBL,EAAO,eAAiB,QAG1CM,QAASL,GAERF,GAGH,4BAAQO,QAASH,GAAjB,oBCpBSI,EAVE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOZ,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,wBAAIY,cAAY,YACbD,EAAME,KAAI,SAAAf,GAAI,OACb,kBAAC,EAAD,CAAUA,KAAMA,EAAMgB,IAAKhB,EAAKG,GAAIF,SAAUA,EAAUC,SAAUA,SCiB3De,EAtBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAE3BC,EAAWf,uBAAY,SAAAgB,GAC3BF,EAASE,EAAEC,OAAOJ,SACjB,IACGK,EAAWlB,uBACf,SAAAgB,GACEL,EAASE,GACTC,EAAS,IACTE,EAAEG,mBAEJ,CAACR,EAAUE,IAGb,OACE,0BAAMK,SAAUA,GACd,2BAAOE,YAAY,qDAAaP,MAAOA,EAAOE,SAAUA,IACxD,4BAAQM,KAAK,UAAb,kBC6BSC,UA5CC,WAAO,IAAD,EACMV,mBAAS,CACjC,CACEhB,GAAI,EACJC,KAAM,yBACNC,MAAM,GAER,CACEF,GAAI,EACJC,KAAM,2CACNC,MAAM,KAVU,mBACbQ,EADa,KACNiB,EADM,KAadC,EAASC,iBAAO,GAEhBd,EAAWX,uBAAY,SAAAH,GAE3B0B,GAAS,SAAAjB,GAAK,OACZA,EAAMoB,OAAO,CACX9B,GAAI4B,EAAOG,QACX9B,OACAC,MAAM,OAIV0B,EAAOG,SAAW,IACjB,IAEGjC,EAAWM,uBAAY,SAAAJ,GAC3B2B,GAAS,SAAAjB,GAAK,OAAIA,EAAME,KAAI,SAAAf,GAAI,OAAKA,EAAKG,KAAOA,EAAZ,2BAAsBH,GAAtB,IAA4BK,MAAOL,EAAKK,OAASL,UACrF,IAEGE,EAAWK,uBAAY,SAAAJ,GAC3B2B,GAAS,SAAAjB,GAAK,OAAIA,EAAMsB,QAAO,SAAAnC,GAAI,OAAIA,EAAKG,KAAOA,UAClD,IAEH,OACE,oCACE,kBAAC,EAAD,CAAUe,SAAUA,IACpB,kBAAC,EAAD,CAAUL,MAAOA,EAAOZ,SAAUA,EAAUC,SAAUA","file":"static/js/10.8b203b88.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\r\n\r\nconst TodoItem = ({ todo, onToggle, onRemove }) => {\r\n  const { id, text, done } = todo;\r\n  const toggle = useCallback(() => onToggle(id), [id, onToggle]);\r\n  const remove = useCallback(() => onRemove(id), [id, onRemove]);\r\n\r\n  const handleClick = config => {\r\n    const { type = '' } = config;\r\n\r\n    if (type === 'toggle') {\r\n      onToggle({ value: id });\r\n      return;\r\n    }\r\n\r\n    if (type === 'remove') {\r\n      onRemove({ value: id });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <span\r\n        style={{\r\n          textDecoration: done ? 'line-through' : 'none',\r\n        }}\r\n        // onClick={() => handleClick({ type: 'toggle', value: id })}\r\n        onClick={toggle}\r\n      >\r\n        {text}\r\n      </span>\r\n      {/* <button onClick={() => handleClick({ type: 'remove', value: id })}>삭제</button> */}\r\n      <button onClick={remove}>삭제</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoItem);\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({ todos, onToggle, onRemove }) => {\r\n  return (\r\n    <ul data-testid=\"TodoList\">\r\n      {todos.map(todo => (\r\n        <TodoItem todo={todo} key={todo.id} onToggle={onToggle} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nconst TodoForm = ({ onInsert }) => {\r\n  const [value, setValue] = useState('');\r\n  const onChange = useCallback(e => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      onInsert(value);\r\n      setValue('');\r\n      e.preventDefault(); // 새로고침을 방지함\r\n    },\r\n    [onInsert, value],\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input placeholder=\"할 일을 입력하세요\" value={value} onChange={onChange} />\r\n      <button type=\"submit\">등록</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      text: 'TDD 배우기',\r\n      done: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'react-testing-library 배우기',\r\n      done: true,\r\n    },\r\n  ]);\r\n  const nextId = useRef(3); // 새로 추가 할 항목에서 사용 할 id\r\n\r\n  const onInsert = useCallback(text => {\r\n    // 새 항목 추가 후\r\n    setTodos(todos =>\r\n      todos.concat({\r\n        id: nextId.current,\r\n        text,\r\n        done: false,\r\n      }),\r\n    );\r\n    // nextId 값에 1 더하기\r\n    nextId.current += 1;\r\n  }, []);\r\n\r\n  const onToggle = useCallback(id => {\r\n    setTodos(todos => todos.map(todo => (todo.id === id ? { ...todo, done: !todo.done } : todo)));\r\n  }, []);\r\n\r\n  const onRemove = useCallback(id => {\r\n    setTodos(todos => todos.filter(todo => todo.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TodoForm onInsert={onInsert} />\r\n      <TodoList todos={todos} onToggle={onToggle} onRemove={onRemove} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"],"sourceRoot":""}