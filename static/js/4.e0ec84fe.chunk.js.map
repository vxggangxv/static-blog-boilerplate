{"version":3,"sources":["components/common/dropzone/Dropzone.js","pages/test/DropzoneWrapper.js","pages/test/Test.js"],"names":["Styled","Dropzone","styled","div","width","height","styles","onSetVisible","apiRequest","useState","dropFiles","setDropFiles","isRequest","setIsRequest","onDrop","useCallback","acceptedFiles","a","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","e","concat","useDropzone","getRootProps","getInputProps","rootProps","isDragActive","maxsize","onDragLeave","inputProps","useEffect","data-component-name","style","className","src","icon_picture","alt","DropzoneChildren","onDropFilesUpload","Promise","resolve","reject","setTimeout","DropzoneWrapper","children","visible","setVisible","handleSetVisible","toggle","onDragEnter","DropzoneContainer","Test","match","url","AppTemplate","title","to","exact","path","component","TestList","TestDetail","Counter","TodoApp","DelayedToggle","UserProfile"],"mappings":"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","file":"static/js/4.e0ec84fe.chunk.js","sourcesContent":["import { useDidMount } from 'lib/utils';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport { useImmer } from 'use-immer';\r\nimport { icon_picture } from 'components/base/images';\r\nimport { AirlineSeatIndividualSuiteSharp } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * e.g.\r\n * <Dropzone\r\n *  width={number} : styles가 없을 경우 width 적용, 기본 100%\r\n *  height={number} : styles가 없을 경우 height 적용, 기본 100%\r\n *  styles={object} : style property 객체\r\n *  onSetVisible={function} : dropzoneView visible설정을 위해 DropzoneWrapper에서 받은 function\r\n * />\r\n */\r\nfunction Dropzone({ width, height, styles, onSetVisible, apiRequest }) {\r\n  const [dropFiles, setDropFiles] = useState([]);\r\n  const [isRequest, setIsRequest] = useState(false);\r\n  // DEBUG: async await 실제 api테스트 필요\r\n  const onDrop = useCallback(async acceptedFiles => {\r\n    acceptedFiles.forEach(file => {\r\n      // setIsRequest(false);\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('file reading was aborted');\r\n      reader.onerror = () => console.log('file reading has failed');\r\n      reader.onload = e => {\r\n        // console.log(e.target.result, 'e.target.result');\r\n        // console.log(file, 'file');\r\n        // Do whatever you want with the file contents\r\n        // const binaryStr = reader.result;\r\n        // console.log(binaryStr, 'binaryStr');\r\n        // console.log(reader, 'reader');\r\n      };\r\n      // reader.readAsDataURL(file);\r\n      // reader.readAsArrayBuffer(file);\r\n    });\r\n    setDropFiles(dropFiles.concat(acceptedFiles));\r\n    setIsRequest(true);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const rootProps = {\r\n    ...getRootProps(),\r\n    maxsize: 100,\r\n    // multiple: false,\r\n    onDragLeave: () => onSetVisible(false),\r\n    // onDrop: () => onSetVisible(false),\r\n    // onDrop: () => console.log('onDrop'),\r\n  };\r\n\r\n  const inputProps = {\r\n    ...getInputProps(),\r\n    // multiple: false,\r\n    // accept: 'image/gif, image/jpg, image/jpeg',\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(getRootProps(), 'getRootProps()');\r\n  //   console.log(getInputProps(), 'getInputProps()');\r\n  // }, []);\r\n\r\n  // valuesImage에 담은 후 api호출\r\n  // await call Api 은 DropzoneWrapper에서 연결\r\n  // useEffect(() => {\r\n  //   console.log(dropFiles, 'dropFiles');\r\n  // }, [dropFiles]);\r\n\r\n  // 파일 Drop 완료후 set Dropzone visible false\r\n  useEffect(() => {\r\n    console.log(isRequest, 'isRequest');\r\n    if (isRequest) {\r\n      apiRequest();\r\n      // apiRequest({ dropFiles });\r\n      onSetVisible(false);\r\n    }\r\n  }, [isRequest]);\r\n\r\n  return (\r\n    <Styled.Dropzone\r\n      data-component-name=\"Dropzone\"\r\n      style={styles}\r\n      width={width}\r\n      height={height}\r\n      className={!styles && 'default'}\r\n    >\r\n      <div className=\"dropzoneView\">\r\n        <div className=\"dropzoneView__picture_box\">\r\n          <div className=\"dropzoneView__picture_img\">\r\n            <img src={icon_picture} alt=\"picture\" />\r\n          </div>\r\n          <div className=\"dropzoneView__picture_text\">Drag&amp;Drop File here</div>\r\n        </div>\r\n      </div>\r\n      <div {...rootProps} className=\"dropzone__container\">\r\n        <input {...inputProps} />\r\n        {/* {isDragActive ? (\r\n        <p>Drop the files here ...</p>\r\n      ) : (\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      )} */}\r\n        {/* <br />\r\n      업로드 파일명: {image} */}\r\n      </div>\r\n    </Styled.Dropzone>\r\n  );\r\n}\r\n\r\nconst Styled = {\r\n  Dropzone: styled.div`\r\n    &.default,\r\n    .dropzone__container {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: ${({ width }) => (width ? `${width}px` : `100%`)};\r\n      height: ${({ height }) => (height ? `${height}px` : `100%`)};\r\n    }\r\n    &.default {\r\n      padding: 20px;\r\n      background-color: #fff;\r\n      border: 1px solid #333;\r\n    }\r\n    .dropzone__container {\r\n      outline: none;\r\n    }\r\n    .dropzoneView {\r\n      border: 1px solid #333;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      height: 100%;\r\n    }\r\n    .dropzoneView__picture_box {\r\n      text-align: center;\r\n      .dropzoneView__picture_img {\r\n      }\r\n      .dropzoneView__picture_text {\r\n        margin-top: 15px;\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Dropzone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Dropzone from 'components/common/dropzone/Dropzone';\r\nimport styled from 'styled-components';\r\n\r\nfunction DropzoneChildren() {\r\n  return (\r\n    <Styled.DropzoneChildren className=\"content__container\">\r\n      Test content UI\r\n    </Styled.DropzoneChildren>\r\n  );\r\n}\r\n\r\nconst onDropFilesUpload = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      console.log('apiRequest');\r\n      resolve(5);\r\n    }, 5000);\r\n  });\r\n};\r\n\r\n// 차후 dropzoneComponent 종류 추가될 경우 키값 추가\r\n// 드래그할 경우 나타났다 사라지게 하는 wrapper\r\n/**\r\n * e.g.\r\n * <DropzoneWrapper\r\n *  apiRequest={function}> : api요청 function\r\n *  className={string} : 상위컴포넌트에서 스타일을 설정한 className\r\n *  width={number} : styles가 없을 경우 width 적용, 기본 100%\r\n *  height={number} : styles가 없을 경우 height 적용, 기본 100%\r\n *  {children}\r\n * </>\r\n */\r\nfunction DropzoneWrapper({ className, children, width, height, apiRequest }) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleSetVisible = toggle => {\r\n    setVisible(toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(children, 'children');\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   console.log(visible, 'visible');\r\n  // }, [visible]);\r\n\r\n  return (\r\n    <Styled.DropzoneWrapper\r\n      data-component-name=\"DropzoneWrapper\"\r\n      onDragEnter={() => handleSetVisible(true)}\r\n      className={className}\r\n      width={!className && width}\r\n      height={!className && height}\r\n    >\r\n      {children}\r\n      {visible && <Dropzone onSetVisible={handleSetVisible} apiRequest={onDropFilesUpload} />}\r\n      {/* {true && <Dropzone onSetVisible={handleSetVisible} />} */}\r\n    </Styled.DropzoneWrapper>\r\n  );\r\n}\r\n\r\nfunction DropzoneContainer() {\r\n  return (\r\n    <DropzoneWrapper width={800} height={300}>\r\n      <DropzoneChildren />\r\n    </DropzoneWrapper>\r\n  );\r\n}\r\n\r\nconst Styled = {\r\n  DropzoneWrapper: styled.div`\r\n    margin-top: 100px;\r\n    position: relative;\r\n    width: ${({ width }) => (width ? `${width}px` : `100%`)};\r\n    height: ${({ height }) => (height ? `${height}px` : `100%`)};\r\n  `,\r\n  DropzoneChildren: styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid #bbb;\r\n    padding: 50px;\r\n  `,\r\n};\r\n\r\nexport default DropzoneContainer;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport { TestList, TestDetail, Counter, TodoApp, DelayedToggle, UserProfile } from 'pages';\r\nimport DropzoneWrapper from './DropzoneWrapper';\r\nimport NotFound from 'components/base/error/NotFound';\r\nimport AppTemplate from 'components/base/template/AppTemplate';\r\nimport styled from 'styled-components';\r\nimport { color } from 'styles/utils';\r\n\r\nfunction Test({ match }) {\r\n  console.log(match.url, 'match.url');\r\n\r\n  // NOTE: match.url 또는 mapper.pageUrl 설정후 path 연결\r\n  return (\r\n    <AppTemplate title={'Test'}>\r\n      <Styled.Test data-component-name=\"Test\">\r\n        <ul className=\"test__menu_list\">\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}`}>TestList</Link>\r\n          </li>\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}/counter`}>Counter</Link>\r\n          </li>\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}/todo`}>Todo</Link>\r\n          </li>\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}/delayedToggle`}>DelayedToggle</Link>\r\n          </li>\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}/userProfile`}>UserProfile</Link>\r\n          </li>\r\n          <li className=\"test__menu_item\">\r\n            <Link to={`${match.url}/dropzone`}>Dropzone</Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path={`${match.url}`} component={TestList} />\r\n          <Route exact path={`${match.url}/@:id`} component={TestDetail} />\r\n          <Route exact path={`${match.url}/counter`} component={Counter} />\r\n          <Route exact path={`${match.url}/todo`} component={TodoApp} />\r\n          <Route exact path={`${match.url}/delayedToggle`} component={DelayedToggle} />\r\n          <Route exact path={`${match.url}/userProfile`} component={UserProfile} />\r\n          <Route exact path={`${match.url}/dropzone`} component={DropzoneWrapper} />\r\n          {/* <Route path={`${match.url}/`} component={() => <Redirect to=\"/test\" />} /> */}\r\n          {/* <Route path={`${match.url}/`} component={() => <div>해당값이 없습니다</div>} /> */}\r\n          <Route component={() => <Redirect to=\"/error/404\" />} />\r\n        </Switch>\r\n      </Styled.Test>\r\n    </AppTemplate>\r\n  );\r\n}\r\n\r\nconst Styled = {\r\n  Test: styled.div`\r\n    padding: 10px;\r\n    .test__menu_list {\r\n      margin-bottom: 10px;\r\n      .test__menu_item {\r\n        display: inline-flex;\r\n        &:not(:first-child) {\r\n          margin-left: 10px;\r\n        }\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Test;\r\n"],"sourceRoot":""}